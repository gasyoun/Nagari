Sub CountDevanagariLigatures()
    
    Dim arrStr, arrWord, arrSlog, tmpArr, tmpArr2, temp, tempArr_2, s$, word$, slog$, i&, z&, j&, Count&, b As Boolean
    
    arrWord = Array("kh", "gh", "ch", "jh", ChrW(7789) & "h", ChrW(7693) & "h", "th", "dh", "ph", "bh")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "gh", "/gh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "ch", "/ch/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "jh", "/jh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), ChrW(7789) & "h", "/" & ChrW(7789) & "h/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), ChrW(7693) & "h", "/" & ChrW(7693) & "h/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "th", "/th/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "dh", "/dh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "ph", "/ph/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "bh", "/bh/")
    For z = 0 To UBound(arrWord)
    Cells.Replace What:=arrWord(z), Replacement:=ChrW(664) & arrWord(z) & ChrW(664), LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Next z
        
    With ActiveSheet
        arrStr = .Range(.[A1], .Cells(.Rows.Count, "A").End(xlUp)).Value
        arrSlog = .Range(.[F2], .Cells(.Rows.Count, "F").End(xlUp)).Value
    End With
    
    For i = 1 To UBound(arrStr)
        arrStr(i, 1) = LigatureUsageSamples(arrStr(i, 1))
    Next i
    
    Set oDict = CreateObject("Scripting.Dictionary")
    With oDict
        For j = 1 To UBound(arrSlog)
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "kh", "/kh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "gh", "/gh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "ch", "/ch/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "jh", "/jh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), ChrW(7789) & "h", "/" & ChrW(7789) & "h/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), ChrW(7693) & "h", "/" & ChrW(7693) & "h/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "th", "/th/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "dh", "/dh/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "ph", "/ph/")
            'arrSlog(j, 1) = Replace(arrSlog(j, 1), "bh", "/bh/")
            .Add UCase(arrSlog(j, 1)), "0||"
        Next j
            
        For i = 1 To UBound(arrStr)
            For j = 1 To UBound(arrSlog)
                s = UCase(arrStr(i, 1))
                slog = UCase(arrSlog(j, 1))
                
                tmpArr = Split(.Item(slog), "|")
                b = False
                
                Do While InStr(s, slog) > 0
                    tmpArr(0) = CStr(CInt(tmpArr(0)) + 1)   ' Increasing the counter
                    b = True    ' Remembering the line of the text
                    
                    If Left(s, InStr(s, slog) - 1) <> "" Then
                        tmpArr2 = Split(Left(s, InStr(s, slog) - 1), " ")
                        word = tmpArr2(UBound(tmpArr2))
                    Else
                        word = ""
                    End If
                    tmpArr2 = Split(Mid(s, InStr(s, slog)), " ")
                    word = word & tmpArr2(0)
                    
                    If InStr("," & tmpArr(1), "," & word & ",") = 0 Then tmpArr(1) = tmpArr(1) & word & ","
                    
                    s = Replace(s, slog, "", , 1)   ' óáèðàåì ñëîã
                Loop
                
                If b Then tmpArr(2) = tmpArr(2) & i & ","
                
                .Item(slog) = Join(tmpArr, "|")
            Next j
        Next i
        Count = 1
        For j = 2 To UBound(arrSlog) + 1
            tmpArr = Split(.Item(UCase(ActiveSheet.Cells(j, "F").Text)), "|")
            
            ActiveSheet.Cells(j, "G") = tmpArr(0) '.Item(UCase(ActiveSheet.Cells(j, "F").Text))
            'If (Count <= 2) Then
                If (Len(tmpArr(1)) > 0) Then
                tempArr_2 = Split(tmpArr(1), ",")
                If (UBound(tempArr_2) >= 2) Then
                    temp = tempArr_2(0) & "," & tempArr_2(1)
                Else
                    temp = tempArr_2(0)
                End If
                    ActiveSheet.Cells(j, "H") = LCase(temp)
                    'Count = Count + 1
                Else
                    ActiveSheet.Cells(j, "H") = ""
                End If
                
                 If (Len(tmpArr(1)) > 0) Then
                    ActiveSheet.Cells(j, "I") = LCase(Left(tmpArr(1), Len(tmpArr(1)) - 1))
                    'Count = Count + 1
                Else
                    ActiveSheet.Cells(j, "I") = ""
                End If
            'End If
            If Len(tmpArr(2)) > 0 Then
                ActiveSheet.Cells(j, "J") = Left(tmpArr(2), Len(tmpArr(2)) - 1)
            Else
                ActiveSheet.Cells(j, "J") = ""
            End If

        Next j
    End With
     For z = 0 To UBound(arrWord)
    Cells.Replace What:=ChrW(664) & arrWord(z) & ChrW(664), Replacement:=arrWord(z), LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Next z
End Sub

Function LigatureUsageSamples$(ByVal strIn$)
    ' Returns two samples of each ligature (bṛhacchravā,yacchravayanta)

    Dim ptrn$, i%
    
    ptrn = "!""#$%&'()*+,-./:;<=>?@[\]^_`{|}~«»"
    
    For i = 1 To Len(ptrn)
        strIn = Replace(strIn, Mid(ptrn, i, 1), "")
    Next i
    'To correctly count kha as kh and not k+h
    ' kha gha cha jha ?ha ?ha tha dha pha bha
       ' strIn = Replace(strIn, "kh", "/kh/")
       ' strIn = Replace(strIn, "gh", "/gh/")
       ' strIn = Replace(strIn, "ch", "/ch/")
       ' strIn = Replace(strIn, "jh", "/jh/")
       ' strIn = Replace(strIn, ChrW(7789) & "h", "/" & ChrW(7789) & "h/")
       ' strIn = Replace(strIn, ChrW(7693) & "h", "/" & ChrW(7693) & "h/")
       ' strIn = Replace(strIn, "th", "/th/")
       ' strIn = Replace(strIn, "dh", "/dh/")
       ' strIn = Replace(strIn, "ph", "/ph/")
       ' strIn = Replace(strIn, "bh", "/bh/")
    CorrectSentense = Application.Trim(strIn)
End Function